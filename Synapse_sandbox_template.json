{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
        "name": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "DataLakeStorageAccountName": {
            "type": "string"
        },
        "DataLakeStorageFilesystemName": {
            "type": "string"
        },
        "sqlAdministratorLogin": {
            "type": "string"
        },
        "sqlAdministratorLoginPassword": {
            "type": "secureString",
            "defaultValue": ""
        },
        "sqlDedicatedPoolName": {
            "type": "string"
        }
       /* "defaultAdlsGen2AccountResourceId": {
            "type": "string",
            "defaultValue": ""
        }, 
        "workspaceStorageAccountProperties": {
            "type": "object",
            "defaultValue": {}
        }*/
    },
    "variables": {
        "storageBlobDataContributorRoleID": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
        "defaultDataLakeStorageAccountUrl": "[concat('https://', parameters('DataLakeStorageAccountName'), '.dfs.core.windows.net')]",
        "createManagedPrivateEndpoint": false,
        "azureADOnlyAuthentication": false,
        "allowAllConnections": true,
        "managedVirtualNetwork": "default",
        "storageSubscriptionID": "[subscription().subscriptionId]",
        "storageResourceGroupName": "[resourceGroup().name]",
        "storageLocation": "[resourceGroup().location]",
        "storageRoleUniqueId": "[Guid(concat(resourceGroup().id),parameters('DataLakeStorageAccountName'))]",
        "isNewStorageAccount": true,
        "isNewFileSystemOnly": false,
        "managedResourceGroupName": "[concat(resourceGroup().location, '_ManagedRG')]",
        "storageAccessTier": "Hot",
        "storageAccountType": "Standard_RAGRS",
        "storageSupportsHttpsTrafficOnly": "true",
        "storageKind": "StorageV2",
        "minimumTlsVersion": "TLS1_2",
        "storageIsHnsEnabled": "true",
        "setSbdcRbacOnStorageAccount": false,
        "sku": "DW100c",
        "collation": "SQL_Latin1_General_CP1_CI_AS",
        "metadataSync": false
    },
    "resources": [
        {
            "apiVersion": "2021-06-01-preview",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "type": "Microsoft.Synapse/workspaces",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "defaultDataLakeStorage": {
                    "accountUrl": "[variables('defaultDataLakeStorageAccountUrl')]",
                    "filesystem": "[parameters('DataLakeStorageFilesystemName')]",
                   // "resourceId": "[parameters('defaultAdlsGen2AccountResourceId')]",
                    "createManagedPrivateEndpoint": "[variables('createManagedPrivateEndpoint')]"
                },
                "managedVirtualNetwork": "[variables('managedVirtualNetwork')]",
                "managedResourceGroupName": "[variables('managedResourceGroupName')]",
                "azureADOnlyAuthentication": "[variables('azureADOnlyAuthentication')]",
                "sqlAdministratorLogin": "[parameters('sqlAdministratorLogin')]",
                "sqlAdministratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]"
            },
            "resources": [
                {
                    "condition": "[variables('allowAllConnections')]",
                    "apiVersion": "2021-06-01-preview",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "allowAll",
                    "properties": {
                        "startIpAddress": "0.0.0.0",
                        "endIpAddress": "255.255.255.255"
                    },
                    "type": "firewallrules"
                }
            ],
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('DataLakeStorageAccountName'))]",
                "[concat('Microsoft.Resources/deployments/', parameters('DataLakeStorageFilesystemName'))]"
            ],
            "tags": {
                "Environment": "Demo",
                "Project": "Tutorial"
            }
        },
        {
            "condition": "[variables('isNewStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('DataLakeStorageAccountName')]",
            "apiVersion": "2021-01-01",
            "location": "[variables('storageLocation')]",
            "properties": {
                "accessTier": "[variables('storageAccessTier')]",
                "supportsHttpsTrafficOnly": "[variables('storageSupportsHttpsTrafficOnly')]",
                "isHnsEnabled": "[variables('storageIsHnsEnabled')]",
                "minimumTlsVersion": "[variables('minimumTlsVersion')]"
            },
            "sku": {
                "name": "[variables('storageAccountType')]"
            },
            "kind": "[variables('storageKind')]",
            "tags": {
                "Environment": "Demo",
                "Project": "Tutorial"
            },
            "resources": [
                {
                    "condition": "[variables('isNewStorageAccount')]",
                    "name": "[concat('default/', parameters('DataLakeStorageFilesystemName'))]",
                    "type": "blobServices/containers",
                    "apiVersion": "2021-01-01",
                    "properties": {
                        "publicAccess": "None"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.Storage/storageAccounts/', parameters('DataLakeStorageAccountName'))]"
                    ]
                }
            ]
        },
        {
            "condition": "[variables('isNewFileSystemOnly')]",
            "apiVersion": "2019-05-01",
            "name": "[parameters('DataLakeStorageFilesystemName')]",
            "type": "Microsoft.Resources/deployments",
            "subscriptionId": "[variables('storageSubscriptionID')]",
            "resourceGroup": "[variables('storageResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
                            "name": "[concat(parameters('DataLakeStorageAccountName'), '/default/', parameters('DataLakeStorageFilesystemName'))]",
                            "apiVersion": "2021-01-01",
                            "properties": {
                                "publicAccess": "None"
                            }
                        }
                    ]
                }
            }
        },
        //Adding Role Assignment for Storage Contribution Role
    {
      "scope": "[concat('Microsoft.Storage/storageAccounts/', parameters('DataLakeStorageAccountName'))]",
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "name": "Storage Account Role Assingment",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[parameters('name')]"
      ],
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.Synapse/workspaces', parameters('name')), '2019-06-01-preview', 'Full').identity.principalId]",
        "principalType": "ServicePrincipal"
      }
    },
        {
            "type": "Microsoft.Synapse/workspaces/sqlPools",
            "apiVersion": "2021-06-01",
            "location": "[parameters('location')]",
            "tags": {
                "Environment": "Demo",
                "Project": "Tutorial"
            },
            "name": "[concat(parameters('name'), '/', parameters('sqlDedicatedPoolName'))]",
            "sku": {
                "name": "[variables('sku')]"
            },
            "properties": {
                "createMode": "Default",
                "collation": "[variables('collation')]"
            },
            "dependsOn": [
            "[concat('Microsoft.Synapse/workspaces/', parameters('name'))]"
            ],
            "resources": [
                {
                    "condition": "[variables('metadataSync')]",
                    "apiVersion": "2021-06-01",
                    "dependsOn": [
                        "[concat('Microsoft.Synapse/workspaces/', parameters('name'), '/sqlPools/', parameters('sqlDedicatedPoolName'))]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "config",
                    "properties": {
                        "Enabled": "[variables('metadataSync')]"
                    },
                    "type": "metadataSync"
                }
            ]
        }
    ],
    "outputs": {}
}